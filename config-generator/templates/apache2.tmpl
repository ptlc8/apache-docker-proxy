LoadModule proxy_module modules/mod_proxy.so
LoadModule proxy_http_module modules/mod_proxy_http.so
LoadModule rewrite_module modules/mod_rewrite.so


{{ $topdomain := env "TOPDOMAIN" | default "localhost" }}
{{ $redirectProtocol := eq (env "REDIRECT_TO_SECURE") "true" | ternary "https" "http" }}


AllowEncodedSlashes NoDecode
ProxyPreserveHost On


{{ if eq (env "DEFAULT_REDIRECT_TO_TOPDOMAIN") "true" }}
<VirtualHost *:80>

    Redirect / {{ $redirectProtocol }}://{{ $topdomain }}/

    #ErrorLog ${APACHE_LOG_DIR}/error.log
    #CustomLog ${APACHE_LOG_DIR}/access.log combined

</VirtualHost>
{{ end }}


{{/* Only keep containers with webproxy labels */}}
{{ $webproxyfiedContainers := list }}
{{ range $container := $ }}
{{ range $label, $value := $container.Labels }}
{{ if hasPrefix "webproxy." $label }}
{{ $webproxyfiedContainers = append $webproxyfiedContainers $container }}
{{ break }}
{{ end }}
{{ end }}
{{ end }}

{{ range $subdomain, $containers := groupByLabelWithDefault $webproxyfiedContainers "webproxy.subdomain" "" }}
<VirtualHost *:80>

    {{ if eq $subdomain "" }}
    ServerName {{ $topdomain }}
    {{ else }}
    ServerName {{ $subdomain }}.{{ $topdomain }}
    {{ end }}

    {{ with index ($containers | first).Labels "webproxy.serveradmin" }}
    ServerAdmin {{ . }}
    {{ end }}

    {{ range $index, $container := $containers }}
    # Container {{ $container.Name }}
    {{ $path := index $container.Labels "webproxy.path" | default "" }}
    <Location "/{{ $path }}">
    {{ if not (eq $path "") }}
        RewriteEngine On
        RewriteCond %{REQUEST_URI} ^/{{ $path }}$ 
        RewriteRule ^(.*)$ /{{ $path }}/ [R=301,L]
    </Location>
    <Location "/{{ $path }}/">
    {{ end }}
        {{ $address := where $container.Addresses "Port" (index $container.Labels "webproxy.port") | default (sortObjectsByKeysAsc $container.Addresses "Port") | first }}
        {{ $port := $address.HostPort }}
        {{ $ip := ($container.Networks | first).Gateway }}

        {{ if index $container.Labels "webproxy.websockets" }}
        RewriteEngine On
        RewriteCond %{HTTP:Upgrade} websocket [NC]
        RewriteCond %{HTTP:Connection} Upgrade [NC]
        RewriteRule (.*) ws://{{ $ip }}:{{ $port }}/$1 [P,L]
        {{ end }}

        ProxyPass http://{{ $ip }}:{{ $port }}/ nocanon
        ProxyPassReverse http://{{ $ip }}:{{ $port }}/

        {{ with index $container.Labels "webproxy.errors" }}
        {{ range $error := (split . ",") }}
        ErrorDocument {{ split $error " " | first }} {{ split $error " " | last }}
        {{ end }}
        {{ end }}

    </Location>
    {{ end }}

    #ErrorLog ${APACHE_LOG_DIR}/error.log
    #CustomLog ${APACHE_LOG_DIR}/access.log combined

</VirtualHost>
{{ end }}